#!/usr/bin/ruby
require 'yaml'
require 'fileutils'


COMMANDS = {
  start: 'start',
  add: 'add',
  remove: 'remove',
  list: 'list',
  init: 'init'
}



unless command = ARGV.first
  puts 'No command specified'
end

if command == COMMANDS[:init]
  dirname = File.dirname(NERDINATOR_CONFIG)
  unless File.directory?(dirname)
    FileUtils.mkdir_p(dirname)
    FileUtils.touch(NERDINATOR_CONFIG)
  end
elsif command == COMMANDS[:start] && session_name = ARGV[1]
  config = YAML.load_file(NERDINATOR_CONFIG)
  session_file = YAML.load_file("#{TMUXINATOR_CONFIG}/#{session_name}.yml")
  nerdinator_config = session_file['nerdinator']
  settings = nerdinator_config.map { |k, v| "#{k}=#{v}" }.join(' ') if nerdinator_config
  puts "#{session_name}"
  %x[tmuxinator start #{session_name} #{settings}]

  puts 'Nerdinator sessions started:'
  session_params = session_name.split('/')
  sub_sessions = traverse_sessions(session_params, config)
  run_sessions(session_params.last, sub_sessions[session_params.last])
elsif command == COMMANDS[:add] && session_name = ARGV[1]
  config = YAML.load_file(NERDINATOR_CONFIG) || Hash.new
  session_params = session_name.split('/')

  namespace_session(session_params, config)
  File.open(NERDINATOR_CONFIG, 'w') do |f|
    YAML.dump(config, f)
  end

  FileUtils.ln_s("#{ENV['PWD']}/tmuxinator.yml", "#{ENV['HOME']}/.tmuxinator/#{session_params.last}.yml")
elsif command == COMMANDS[:remove] && session_name = ARGV[1]
  config = YAML.load_file(NERDINATOR_CONFIG) || Hash.new
  session_params = session_name.split('/')
  remove_sessions(session_params, config)

  File.open(NERDINATOR_CONFIG, 'w') do |f|
    YAML.dump(config, f)
  end
  # %x[rm #{ENV['HOME']}/.tmuxinator/#{session_name}.yml]
elsif command == COMMANDS[:list]
  list_sessions(config) if config = YAML.load_file(NERDINATOR_CONFIG)
end
